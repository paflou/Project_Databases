package main;

import static com.mysql.cj.protocol.a.MysqlTextValueDecoder.isDate;
import java.awt.Color;
import methods.ConnectToDB;
import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JLabel;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;


public class ProjectGUI extends javax.swing.JFrame {
    Connection database;
    /**
     * Creates new form ProjectGUI
     */
    public ProjectGUI() {
        initComponents();
  
    }
    public String[] ShowTablesQuery() throws SQLException {
        String query = "SHOW TABLES";
        Statement statement = database.createStatement();
        ResultSet resultSet = statement.executeQuery(query);
        ArrayList<String> TableNames = new ArrayList<>();
        
        while(resultSet.next()) {
            TableNames.add(resultSet.getString(1)); }

        return TableNames.toArray(new String[0]);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        jScrollPane3 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        InsertButton = new javax.swing.JButton();
        DeleteButton = new javax.swing.JButton();
        UpdateButton = new javax.swing.JButton();
        jFrame2 = new javax.swing.JFrame();
        insert1 = new javax.swing.JTextField();
        insert2 = new javax.swing.JTextField();
        insert3 = new javax.swing.JTextField();
        insert4 = new javax.swing.JTextField();
        insert5 = new javax.swing.JTextField();
        insert6 = new javax.swing.JTextField();
        insert7 = new javax.swing.JTextField();
        insert8 = new javax.swing.JTextField();
        insert9 = new javax.swing.JTextField();
        insert10 = new javax.swing.JTextField();
        Label2 = new javax.swing.JLabel();
        Label1 = new javax.swing.JLabel();
        Label4 = new javax.swing.JLabel();
        Label3 = new javax.swing.JLabel();
        Label6 = new javax.swing.JLabel();
        Label5 = new javax.swing.JLabel();
        Label7 = new javax.swing.JLabel();
        Label8 = new javax.swing.JLabel();
        Label9 = new javax.swing.JLabel();
        Label10 = new javax.swing.JLabel();
        FinishUpdate = new javax.swing.JButton();
        FinishInsert = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jPasswordField1 = new javax.swing.JPasswordField();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        jFrame1.setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        jFrame1.setVisible(false);
        jFrame1.setSize(new java.awt.Dimension(1080, 720));

        jList1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jList1.setDoubleBuffered(true);
        jList1.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList1ValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(jList1);

        jLabel2.setText(" Pick a table: ");
        jLabel2.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabel2.setAlignmentY(0.0F);
        jLabel2.setAutoscrolls(true);
        jLabel2.setBorder(new javax.swing.border.MatteBorder(null));

        jTable1.setAutoscrolls(false);
        jTable1.setShowGrid(true);
        jScrollPane2.setViewportView(jTable1);

        InsertButton.setText("Insert");
        InsertButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InsertButtonActionPerformed(evt);
            }
        });

        DeleteButton.setText("Delete");
        DeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteButtonActionPerformed(evt);
            }
        });

        UpdateButton.setText("Update");
        UpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrame1Layout.createSequentialGroup()
                .addGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jFrame1Layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jFrame1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jFrame1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(InsertButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jFrame1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(UpdateButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jFrame1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(DeleteButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 864, Short.MAX_VALUE)
                .addGap(41, 41, 41))
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrame1Layout.createSequentialGroup()
                .addGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jFrame1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(InsertButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(UpdateButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(DeleteButton))
                    .addGroup(jFrame1Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 523, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(181, Short.MAX_VALUE))
        );

        jFrame2.setSize(new java.awt.Dimension(337, 520));
        jFrame2.setVisible(false);

        insert1.setVisible(false);
        insert1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insert1ActionPerformed(evt);
            }
        });

        insert2.setVisible(false);

        insert3.setVisible(false);

        insert4.setVisible(false);

        insert5.setVisible(false);

        insert6.setVisible(false);

        insert7.setVisible(false);

        insert8.setVisible(false);

        insert9.setVisible(false);
        insert9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insert9ActionPerformed(evt);
            }
        });

        insert9.setVisible(false);

        Label2.setText("jLabel1");
        Label2.setVisible(false);

        Label1.setText("jLabel1");
        Label1.setVisible(false);

        Label4.setText("jLabel1");
        Label4.setVisible(false);

        Label3.setText("jLabel1");
        Label3.setVisible(false);

        Label6.setText("jLabel1");
        Label6.setVisible(false);

        Label5.setText("jLabel1");
        Label5.setVisible(false);

        Label7.setText("jLabel1");
        Label7.setVisible(false);

        Label8.setText("jLabel1");
        Label8.setVisible(false);

        Label9.setText("jLabel1");
        Label9.setVisible(false);

        Label10.setText("jLabel1");
        Label9.setVisible(false);

        FinishUpdate.setText("Update");
        FinishUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FinishUpdateActionPerformed(evt);
            }
        });

        FinishInsert.setText("Insert");
        FinishInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FinishInsertActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jFrame2Layout = new javax.swing.GroupLayout(jFrame2.getContentPane());
        jFrame2.getContentPane().setLayout(jFrame2Layout);
        jFrame2Layout.setHorizontalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jFrame2Layout.createSequentialGroup()
                .addGroup(jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jFrame2Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(FinishInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jFrame2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(FinishUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jFrame2Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jFrame2Layout.createSequentialGroup()
                                .addComponent(Label10, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(insert10, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jFrame2Layout.createSequentialGroup()
                                .addComponent(Label1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                                .addComponent(insert1, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jFrame2Layout.createSequentialGroup()
                                .addComponent(Label2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(insert2, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jFrame2Layout.createSequentialGroup()
                                .addComponent(Label3, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(insert3, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jFrame2Layout.createSequentialGroup()
                                .addComponent(Label4, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(insert4, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jFrame2Layout.createSequentialGroup()
                                .addComponent(Label5, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(insert5, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jFrame2Layout.createSequentialGroup()
                                .addComponent(Label6, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(insert6, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jFrame2Layout.createSequentialGroup()
                                .addComponent(Label7, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(insert7, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jFrame2Layout.createSequentialGroup()
                                .addComponent(Label8, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(insert8, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jFrame2Layout.createSequentialGroup()
                                .addComponent(Label9, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(insert9, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(1184, 1184, 1184))
        );
        jFrame2Layout.setVerticalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrame2Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Label1)
                    .addComponent(insert1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Label2)
                    .addComponent(insert2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Label3)
                    .addComponent(insert3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Label4)
                    .addComponent(insert4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Label5)
                    .addComponent(insert5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Label6)
                    .addComponent(insert6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Label7)
                    .addComponent(insert7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Label8)
                    .addComponent(insert8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(insert9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Label9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(insert10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Label10))
                .addGap(10, 10, 10)
                .addComponent(FinishUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(FinishInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setFocusCycleRoot(false);

        jTextField1.setForeground(new java.awt.Color(128, 128, 128));
        jTextField1.setText("username");
        jTextField1.setToolTipText("");
        jTextField1.setAutoscrolls(false);
        jTextField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField1FocusLost(evt);
            }
        });

        jPasswordField1.setForeground(new java.awt.Color(128, 128, 128));
        jPasswordField1.setText("password");
        jPasswordField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jPasswordField1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jPasswordField1FocusLost(evt);
            }
        });

        jButton1.setText("Connect");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("username");

        jLabel3.setText("password");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(241, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jPasswordField1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3))
                .addGap(246, 246, 246))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 133, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    //make placeholder text
    private void jTextField1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField1FocusGained
        if (jTextField1.getText().equals("username")) {
        jTextField1.setText("");
        jTextField1.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_jTextField1FocusGained

    
    private void jTextField1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField1FocusLost
        if (jTextField1.getText().equals("")) {
            jTextField1.setText("username");
            jTextField1.setForeground(Color.GRAY);
        }
    }//GEN-LAST:event_jTextField1FocusLost

    private void jPasswordField1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPasswordField1FocusGained
        char[] enteredPassword = jPasswordField1.getPassword();
        String passwordString = new String(enteredPassword);
        
        if (passwordString.equals("password")) {
        jPasswordField1.setText("");
        jPasswordField1.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_jPasswordField1FocusGained

    private void jPasswordField1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPasswordField1FocusLost
        char[] enteredPassword = jPasswordField1.getPassword();
        String passwordString = new String(enteredPassword);
        
        if (passwordString.equals("")) {
            jPasswordField1.setText("password");
            jPasswordField1.setForeground(Color.GRAY);
        }
    }//GEN-LAST:event_jPasswordField1FocusLost

        
//Establish a connection to the database with the press of the button  
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            char[] passwordChars = jPasswordField1.getPassword();
            String passwordString = new String(passwordChars);
            
            database = ConnectToDB.getMySQLConnection("localhost", "proparaskeuastiko", jTextField1.getText(), passwordString);
            JOptionPane.showMessageDialog(this, "Connection Successful!", "Connection Success!", JOptionPane.INFORMATION_MESSAGE);
            jList1.setListData(ShowTablesQuery());
            jFrame1.setVisible(true);
            dispose(); 
            
        } catch (ClassNotFoundException | SQLException e) {
            System.out.println("Error connecting to Database, please check your information");
            JOptionPane.showMessageDialog(this, "Connection failed! \n Please check your username/password", "Connection Failed!", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jList1ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList1ValueChanged
    String selectedValue = jList1.getSelectedValue();

    Statement statement = null;
    ResultSet resultSet = null;
    ResultSetMetaData rsmd = null;

        try {
            //execute query
            statement = database.createStatement();
            String query = "SELECT * FROM ";
            query = query + selectedValue; 
            
            //Get column names
            resultSet = statement.executeQuery(query);
            rsmd = resultSet.getMetaData();
            
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            
            //wipe previous columns / rows
            model.setRowCount(0);
            model.setColumnCount(0);
            
            //insert columns into jTable
            int cols = rsmd.getColumnCount();
            String[] colName = new String[cols];
            for(int i=0;i<cols;i++)
                colName[i]=rsmd.getColumnName(i+1);
            model.setColumnIdentifiers(colName);

     
            //insert rows into jTable
            while (resultSet.next()) {
                // Retrieve data from the result set
                Object[] row = new Object[cols];
                for (int i = 1; i <= cols; i++) {
                    row[i - 1] = resultSet.getObject(i);
                }
                model.addRow(row);

            }   } catch (SQLException ex) {
            Logger.getLogger(ProjectGUI.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jList1ValueChanged
    

    private void InsertButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InsertButtonActionPerformed
    String selectedValue = jList1.getSelectedValue();
    
    Statement statement = null;
    ResultSet resultSet = null;
    ResultSetMetaData rsmd = null;
    JLabel[] textlabels;
    JTextField[] textfields;
    FinishUpdate.setVisible(false);
    FinishInsert.setVisible(true);
        try {
            //execute query
            statement = database.createStatement();
            String query = "SELECT * FROM ";
            query = query + selectedValue; 
            
            //Get column names
            resultSet = statement.executeQuery(query);
            rsmd = resultSet.getMetaData();
            
            int cols = rsmd.getColumnCount();
            textlabels = new JLabel[]{Label1,Label2,Label3,Label4,Label5,Label6,Label7,Label8,Label9,Label10};
            textfields = new JTextField[]{insert1,insert2,insert3,insert4,insert5,insert6,insert7,insert8,insert9,insert10};
            
            for(JLabel i : textlabels){
                i.setVisible(false);
            }
            for(JTextField i : textfields){
                i.setVisible(false);
            }
            for(int i=1;i<=cols;i++){
                textfields[i].setText("");
                textlabels[i].setText(rsmd.getColumnName(i));
                System.out.println(rsmd.getColumnName(i));
                textfields[i].setVisible(true);
                textlabels[i].setVisible(true);
            jFrame2.setVisible(true);
            }
        } catch (SQLException ex) {
            Logger.getLogger(ProjectGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_InsertButtonActionPerformed

    public static boolean isNumeric(String str) {
    return str != null && str.matches("-?\\d+(\\.\\d+)?"); // Matches integers and decimals
}
    
    private void FinishUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FinishUpdateActionPerformed
        var table = jList1.getSelectedValue();
        JLabel[] textlabels = new JLabel[]{Label1,Label2,Label3,Label4,Label5,Label6,Label7,Label8,Label9,Label10};
        JTextField[] textfields = new JTextField[]{insert1,insert2,insert3,insert4,insert5,insert6,insert7,insert8,insert9,insert10};
        int i=2;
        DatabaseMetaData metadata;
        
        String query = "UPDATE " + table + " SET ";
        query = query + textlabels[1].getText() + " = ";
        query = query + "'" + textfields[1].getText()+ "' ";
        while(i<10) {
            if(textfields[i].isVisible()) {
                query = query + ", ";
                query = query + textlabels[i].getText() + " = ";
                if (isNumeric(textfields[i].getText()))
                    query = query + textfields[i].getText();
                else
                    query = query + "'" + textfields[i].getText() + "' ";
            }
        i++;
        }
        query = query + " WHERE ";
        
        Statement statement;
        try {
            metadata = database.getMetaData();
            ResultSet resultSet = metadata.getPrimaryKeys(null, null, table);
            resultSet.next();
            i=1;
            while(!textlabels[i].getText().equals(resultSet.getString("COLUMN_NAME")) && textfields[i+1].isVisible()){
                    i++;
            }
            if (isDate(textfields[i].getText()) || isNumeric(textfields[i].getText()))
                query = query + resultSet.getString("COLUMN_NAME") + " = " + textfields[i].getText(); 
            else
                query = query + resultSet.getString("COLUMN_NAME") + " = " + "'" + textfields[i].getText() +  "'";
            System.out.println(query);

            while(resultSet.next()){                
                i=1;
                while(!textlabels[i].getText().equals(resultSet.getString("COLUMN_NAME")) && textfields[i+1].isVisible()){
                    i++;
                    System.out.println(query);
                }
                if (isDate(textfields[i].getText()) || isNumeric(textfields[i].getText()))
                    query = query + " AND " + resultSet.getString("COLUMN_NAME") + " = " + textfields[i].getText(); 
                else
                    query = query + " AND " + resultSet.getString("COLUMN_NAME") + " = " + " '" +textfields[i].getText() + "'";
            }
            if(query.substring(query.length() - 1).charAt(0) == ',')
                query = query.substring(0,query.length() - 2);
            statement = database.createStatement();
            System.out.println(query);
            statement.executeUpdate(query);
            jFrame2.setVisible(false);
            JOptionPane.showMessageDialog(this, "Update Success!", "Update Successful!", JOptionPane.INFORMATION_MESSAGE);
        } catch (SQLException ex) {
            Logger.getLogger(ProjectGUI.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Update Unsuccessful!", "Update Unsuccessful!", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_FinishUpdateActionPerformed

    private void UpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateButtonActionPerformed
    int selectedRow = jTable1.getSelectedRow();
    String selectedValue = jList1.getSelectedValue();
    
    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
    Statement statement = null;
    ResultSet resultSet = null;
    ResultSetMetaData rsmd = null;
    JLabel[] textlabels;
    JTextField[] textfields;
    FinishUpdate.setVisible(true);
    FinishInsert.setVisible(false);
        try {
            textlabels = new JLabel[]{Label1,Label2,Label3,Label4,Label5,Label6,Label7,Label8,Label9,Label10};
            textfields = new JTextField[]{insert1,insert2,insert3,insert4,insert5,insert6,insert7,insert8,insert9,insert10};
            
            statement = database.createStatement();
            String query = "SELECT * FROM ";
            query = query + selectedValue; 
            
            resultSet = statement.executeQuery(query);
            rsmd = resultSet.getMetaData();
            
            for(JLabel i : textlabels){
                i.setVisible(false);
            }
            for(JTextField i : textfields){
                i.setVisible(false);
            }
            
            if (selectedRow != -1) {
                int columnCount = model.getColumnCount();
                for (int i = 0; i <columnCount; i++) {
                    Object value = model.getValueAt(selectedRow, i);
                    System.out.println("Column " + i + ": " + value);
                    textlabels[i+1].setText(rsmd.getColumnName(i+1));
                    textfields[i+1].setText( String.valueOf(value));
                    textfields[i+1].setVisible(true);
                    textlabels[i+1].setVisible(true);
                }
                jFrame2.setVisible(true);
            }
        } catch (SQLException ex) {
            Logger.getLogger(ProjectGUI.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_UpdateButtonActionPerformed

    private void FinishInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FinishInsertActionPerformed
        JTextField[] textfields = new JTextField[]{insert1,insert2,insert3,insert4,insert5,insert6,insert7,insert8,insert9,insert10};
        String Table = jList1.getSelectedValue();
        Statement statement = null;
        String query = "INSERT INTO " + Table + " VALUES (" ;
        
        for(var q :textfields) {
            if(q.isVisible()){
                System.out.println(q.getText());
                if("default".equals(q.getText()) || "DEFAULT".equals(q.getText()) || "null".equals(q.getText()) || "NULL".equals(q.getText())){
                    query = query + q.getText() + ", ";
                }
                else if("".equals(q.getText()))
                    query = query + "NULL, ";
                else
                    query = query + "'"+  q.getText() + "', ";
            }
        }
        query = query.substring(0,query.length() - 2);
        query = query + ")";
        try {
            System.out.println(query);
            statement = database.createStatement();
            statement.executeUpdate(query);
            JOptionPane.showMessageDialog(this, "Insert Successful!", "Your record has been inserted!", JOptionPane.INFORMATION_MESSAGE);
            jFrame2.setVisible(false);
        } catch (SQLException ex) {
            Logger.getLogger(ProjectGUI.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Insert unsuccessful!", "Your record has NOT been inserted", JOptionPane.ERROR_MESSAGE);
        }
        
        
    }//GEN-LAST:event_FinishInsertActionPerformed

    private void DeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteButtonActionPerformed
    int selectedRow = jTable1.getSelectedRow();
    String Table = jList1.getSelectedValue();

    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
    String ColumnTitle;
    String query = "DELETE FROM " + Table + " WHERE ";
        try {
            if (selectedRow != -1) {
            int columnCount = model.getColumnCount();
            
            Object value = model.getValueAt(selectedRow, 0);
            ColumnTitle = model.getColumnName(0);
            
            if(value instanceof Integer || value instanceof String && isDate((String)value))
                query +=ColumnTitle + " = " + value;
            else
                query +=ColumnTitle + " = " + "'" + value+ "'";     
            
            for(int i=1;i<columnCount;i++){              
                value = model.getValueAt(selectedRow, i);
                ColumnTitle = model.getColumnName(i);
                if(value instanceof Integer || value instanceof String && isDate((String)value))
                    query += " AND " +  ColumnTitle + " = " + value;
                else
                    query += " AND " +  ColumnTitle + " = " + "'" + value+ "'";
            }
        }
        Statement statement = database.createStatement();
        System.out.println(query);
        statement.executeUpdate(query);
        JOptionPane.showMessageDialog(this, "Delete Successful!", "The record has been deleted", JOptionPane.INFORMATION_MESSAGE);
        } catch (SQLException ex) {
            Logger.getLogger(ProjectGUI.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Delete unsuccessful!", "The record has NOT been deleted", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_DeleteButtonActionPerformed

    private void insert1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insert1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_insert1ActionPerformed

    private void insert9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insert9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_insert9ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProjectGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProjectGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProjectGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProjectGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                int job_done =0;
                new ProjectGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DeleteButton;
    private javax.swing.JButton FinishInsert;
    private javax.swing.JButton FinishUpdate;
    private javax.swing.JButton InsertButton;
    private javax.swing.JLabel Label1;
    private javax.swing.JLabel Label10;
    private javax.swing.JLabel Label2;
    private javax.swing.JLabel Label3;
    private javax.swing.JLabel Label4;
    private javax.swing.JLabel Label5;
    private javax.swing.JLabel Label6;
    private javax.swing.JLabel Label7;
    private javax.swing.JLabel Label8;
    private javax.swing.JLabel Label9;
    private javax.swing.JButton UpdateButton;
    private javax.swing.JTextField insert1;
    private javax.swing.JTextField insert10;
    private javax.swing.JTextField insert2;
    private javax.swing.JTextField insert3;
    private javax.swing.JTextField insert4;
    private javax.swing.JTextField insert5;
    private javax.swing.JTextField insert6;
    private javax.swing.JTextField insert7;
    private javax.swing.JTextField insert8;
    private javax.swing.JTextField insert9;
    private javax.swing.JButton jButton1;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JFrame jFrame2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JList<String> jList1;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
